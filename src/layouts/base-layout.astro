---
interface Props {
  title: string;
  description: string;
  path: string;
  image?: string;
  favicon?: string;
  themeColor?: string;
  lang?: string;
  bodyClass?: string;
}

const defaultImage = '/manifest/icon-512x512.png';
const defaultFavicon = '/favicon.png';
const defaultThemeColor = '#ad24db';

const {
  title,
  description,
  path,
  image = defaultImage,
  favicon = defaultFavicon,
  themeColor = defaultThemeColor,
  lang = 'en',
  bodyClass = '',
} = Astro.props;

const canonicalUrl = new URL(path, Astro.site);
const imageUrl = new URL(image, Astro.site);
---

<!doctype html>
<html lang={lang}>
  <head>
    <!-- Global Metadata -->
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    {
      favicon.endsWith('.svg') ? (
        <link rel="icon" type="image/svg+xml" href={favicon} />
      ) : (
        <link rel="icon" href={favicon} />
      )
    }
    <meta name="generator" content={Astro.generator} />

    <!-- Canonical URL -->
    <link rel="canonical" href={canonicalUrl} />

    <!-- Primary Meta Tags -->
    <title>{title}</title>
    <meta name="title" content={title} />
    <meta name="description" content={description} />

    <!-- Preconnects -->
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />

    <!-- Open Graph / Facebook -->
    <meta property="og:type" content="website" />
    <meta property="og:url" content={canonicalUrl} />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:image" content={imageUrl} />

    <!-- Twitter -->
    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:url" content={canonicalUrl} />
    <meta property="twitter:title" content={title} />
    <meta property="twitter:description" content={description} />
    <meta property="twitter:image" content={imageUrl} />

    <!-- PWA -->
    <meta name="theme-color" content={themeColor} />
    <link rel="manifest" href="/manifest/manifest.webmanifest" />

    <!-- Scripts -->
    <script>
      let theme = localStorage.getItem('theme');
      if (!theme) {
        theme = window.matchMedia('(prefers-color-scheme: dark)').matches
          ? 'dark'
          : 'light';
      }

      document.documentElement.setAttribute('data-theme', theme);
    </script>
    <slot name="scripts" />
  </head>
  <body class={bodyClass}>
    <slot />
  </body>
</html>
