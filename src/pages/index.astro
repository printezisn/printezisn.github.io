---
import { getCollection } from 'astro:content';
import BlogLayout from '@layouts/blog-layout.astro';
import avatar from '@assets/avatar.webp';
import Portfolio from '@components/portfolio/index.astro';

const pageSize = 10;
const posts = (await getCollection('posts'))
  .sort((a, b) => b.data.date.getTime() - a.data.date.getTime())
  .slice(0, pageSize);
const games = (await getCollection('games')).filter((g) => !g.data.hidden);
const otherWork = (await getCollection('other-work')).sort(
  (a, b) => a.data.order - b.data.order,
);

const profilePageStructuredData = {
  '@context': 'https://schema.org',
  '@type': 'ProfilePage',
  dateCreated: '2024-09-03T00:00Z',
  dateModified: '2024-09-03T00:00Z',
  mainEntity: {
    '@id': '#main-author',
    '@type': 'Person',
    name: 'Nikos Printezis',
    description:
      "I'm Nikos and I'm a full stack engineer. I like coding all sorts of stuff, although I focus more on front end development with native JS/CSS features, React and 2D games with PixiJS.",
    image: new URL(avatar.src, Astro.site),
    url: new URL('/', Astro.site),
  },
  hasPart: posts.map((post) => ({
    '@type': 'BlogPosting',
    headline: post.data.title,
    url: new URL(`/blog/post/${post.id}`, Astro.site),
    image: post.data.image
      ? new URL(post.data.image.href.src, Astro.site)
      : undefined,
    datePublished: post.data.date.toISOString(),
    author: { '@id': '#main-author' },
  })),
};
---

<BlogLayout
  title="Nikos Printezis"
  description="Hi! I'm Nikos and I'm a full stack engineer focusing on front end development and 2D game development. Here you may find my portfolio, blog and games."
  path=""
  breadcrumbList={[
    {
      name: 'Portfolio',
      url: '/',
    },
  ]}
  pageLayout="full"
>
  <Fragment
    slot="structured-data"
    set:html={`<script type="application/ld+json">${JSON.stringify(profilePageStructuredData)}</script>`}
  />

  <Portfolio posts={posts} games={games} otherWork={otherWork} />
</BlogLayout>
