---
import { getCollection } from 'astro:content';
import BlogLayout from '../layouts/blog-layout.astro';
import ArrowRightIcon from 'feather-icons/dist/icons/arrow-right.svg?raw';
import { Picture } from 'astro:assets';
import avatar from '../assets/avatar.webp';

const pageSize = 10;
const posts = (await getCollection('posts'))
  .sort((a, b) => b.data.date.getTime() - a.data.date.getTime())
  .slice(0, pageSize);
const games = (await getCollection('games')).filter((g) => !g.data.hidden);
const otherWork = await getCollection('other-work');

const profilePageStructuredData = {
  '@context': 'https://schema.org',
  '@type': 'ProfilePage',
  dateCreated: '2024-09-03T00:00Z',
  dateModified: '2024-09-03T00:00Z',
  mainEntity: {
    '@id': '#main-author',
    '@type': 'Person',
    name: 'Nikos Printezis',
    description:
      "I'm Nikos and I'm a full stack engineer. I like coding all sorts of stuff, although I focus more on front end development with native JS/CSS features, React and 2D games with PixiJS.",
    image: new URL(avatar.src, Astro.site),
    url: new URL('/', Astro.site),
  },
  hasPart: posts.map((post) => ({
    '@type': 'BlogPosting',
    headline: post.data.title,
    url: new URL(`/blog/post/${post.id}`, Astro.site),
    image: post.data.image
      ? new URL(post.data.image.href.src, Astro.site)
      : undefined,
    datePublished: post.data.date.toISOString(),
    author: { '@id': '#main-author' },
  })),
};
---

<BlogLayout
  title="My Portfolio | Nikos Printezis"
  description="Hi! I'm Nikos and I'm a full stack engineer focusing on front end development and 2D game development. Here you may find my portfolio, blog and games."
  path=""
  breadcrumbList={[
    {
      name: 'Portfolio',
      url: '/',
    },
  ]}
>
  <Fragment
    slot="structured-data"
    set:html={`<script type="application/ld+json">${JSON.stringify(profilePageStructuredData)}</script>`}
  />

  <section class="portfolio-section">
    <h2 class="section-title">Blog</h2>
    <div class="portfolio-content">
      {
        posts.map((post) => (
          <article>
            <a
              href={`/blog/post/${post.id}/`}
              title={`Read the post "${post.data.title}"`}
            >
              {post.data.image && (
                <div class="portfolio-image">
                  <Picture
                    src={post.data.image.href}
                    alt={post.data.image!.alt}
                    formats={['avif']}
                    width={512}
                    height={512}
                    loading="eager"
                    decoding="auto"
                  />
                </div>
              )}
              <h3>{post.data.title}</h3>
              <time datetime={post.data.date.toISOString().slice(0, 10)}>
                {post.data.date.toISOString().slice(0, 10)}
              </time>
              <p>{post.data.excerpt}</p>
              <div class="more">Read more</div>
            </a>
          </article>
        ))
      }
      <a href="/blog/" class="view-all" title="View all blog posts">
        <span>View all</span>
        <Fragment set:html={ArrowRightIcon} />
      </a>
    </div>
  </section>
  <section class="portfolio-section">
    <h2 class="section-title">Games</h2>
    <div class="portfolio-content">
      {
        games.map((game) => (
          <article>
            <a
              href={game.data.path}
              title={`Play the game "${game.data.title}"`}
            >
              <div class="portfolio-image">
                <img
                  src={game.data.image}
                  alt={game.data.title}
                  width="512"
                  height="512"
                  loading="lazy"
                  decoding="async"
                />
              </div>
              <h3>{game.data.title}</h3>
              <p>{game.data.description}</p>
              <div class="more">Play</div>
            </a>
          </article>
        ))
      }
    </div>
  </section>
  <section class="portfolio-section">
    <h2 class="section-title">Other work</h2>
    <div class="portfolio-content">
      {
        otherWork.map((w) => (
          <article>
            <a
              href={w.data.url}
              target="_blank"
              rel="noreferrer"
              title={`Learn more about "${w.data.title}"`}
            >
              <h3>{w.data.title}</h3>
              <p>{w.data.description}</p>
              <div class="more">Learn more</div>
            </a>
          </article>
        ))
      }
    </div>
  </section>
</BlogLayout>
