---
import { getCollection } from 'astro:content';
import BlogLayout from '@layouts/blog-layout.astro';
import type { GetStaticPaths } from 'astro';
import PostList from '@components/post-list/index.astro';
import { getEntry } from 'astro:content';

export const getStaticPaths = (async ({ paginate }) => {
  const categories = await getCollection('categories');
  const posts = (await getCollection('posts')).sort(
    (a, b) => b.data.date.getTime() - a.data.date.getTime(),
  );

  return categories.flatMap((category) => {
    const categoryPosts = posts.filter((post) =>
      post.data.categories.includes(category.id),
    );

    return paginate(categoryPosts, {
      pageSize: 10,
      params: {
        slug: category.id,
      },
    });
  });
}) satisfies GetStaticPaths;

const { page } = Astro.props;
const { slug } = Astro.params;
const category = await getEntry('categories', slug)!;
const title =
  page.currentPage === 1
    ? category.data.title
    : `${category.data.title} - Page ${page.currentPage}`;
const path =
  page.currentPage === 1
    ? `/blog/category/${slug}/`
    : `/blog/category/${slug}/${page.currentPage}/`;

const lastUpdateTime = page.data
  .map((p) => p.data.lastUpdate)
  .sort((a, b) => b.getTime() - a.getTime())[0];
---

<BlogLayout
  title={`${title} | Blog Category`}
  description={category.data.description}
  path={path}
  pageTitle={category.data.title}
  pageLayout="sidebar"
  breadcrumbList={[
    {
      name: 'Portfolio',
      url: '/',
    },
    {
      name: 'Blog',
      url: '/blog/',
    },
    {
      name: title,
      url: path,
    },
  ]}
  lastUpdateTime={lastUpdateTime}
>
  <PostList posts={page} titleLevel={3} />
</BlogLayout>
