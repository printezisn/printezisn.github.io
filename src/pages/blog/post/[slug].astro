---
import { getCollection } from 'astro:content';
import BlogLayout from '@layouts/blog-layout.astro';
import type { GetStaticPaths } from 'astro';
import { getEntry } from 'astro:content';
import Post from '@components/post/index.astro';

export const getStaticPaths = (async () => {
  const posts = await getCollection('posts');
  return posts.map((post) => ({
    params: {
      slug: post.id,
    },
  }));
}) satisfies GetStaticPaths;

const { slug } = Astro.params;
const post = await getEntry('posts', slug)!;

const articleStructureData = {
  '@context': 'https://schema.org',
  '@type': 'BlogPosting',
  headline: post.data.title,
  url: new URL(`/blog/post/${post.id}`, Astro.site),
  image: post.data.image
    ? new URL(post.data.image.href.src, Astro.site)
    : undefined,
  datePublished: post.data.date.toISOString(),
  author: {
    '@type': 'Person',
    name: 'Nikos Printezis',
    url: new URL('/', Astro.site),
  },
};
---

<BlogLayout
  title={post.data.title}
  description={post.data.description}
  path={`/blog/post/${post.id}/`}
  image={post.data.image ? post.data.image.href.src : undefined}
  pageLayout="sidebar"
  breadcrumbList={[
    {
      name: 'Portfolio',
      url: '/',
    },
    {
      name: 'Blog',
      url: '/blog/',
    },
    {
      name: post.data.title,
      url: `/blog/post/${post.id}/`,
    },
  ]}
  lastUpdateTime={post.data.lastUpdate}
>
  <Fragment
    slot="structured-data"
    set:html={`<script type="application/ld+json">${JSON.stringify(articleStructureData)}</script>`}
  />

  <Post post={post} />
</BlogLayout>
